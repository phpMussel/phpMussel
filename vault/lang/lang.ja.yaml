##\
# This file is a part of the phpMussel package.
# Homepage: https://phpmussel.github.io/
#
# PHPMUSSEL COPYRIGHT 2013 AND BEYOND BY THE PHPMUSSEL TEAM.
#
# License: GNU/GPLv2
# @see LICENSE.txt
#
# This file: Japanese language data (last modified: 2022.02.13).
##/

Text Direction: "ltr"
PrivacyPolicy: "プライバシー・ポリシー"
SafeBrowseLookup_200: "潜在的に有害なＵＲＬが検出されました"
SafeBrowseLookup_400: "ＡＰＩリクエストが不正である"
SafeBrowseLookup_401: "ＡＰＩ認証エラー"
SafeBrowseLookup_503: "ＡＰＩサービス利用不可"
SafeBrowseLookup_999: "不明なＡＰＩエラー"
_exclamation: "%s！"
_exclamation_final: "%s！"
_fullstop: "。"
_fullstop_final: "。"
bad_command: "すみませんが、​コマンドが理解できません。"
cli_algo_not_supported: "指定されたアルゴリズムはサポートされていません。"
cli_failed_to_complete: "スキャンを完了できませんでした"
cli_is_not_a: "%sはファイルでもディレクトリでもありません。"
cli_ln2: |
 phpMussel（ピー・エイチ・ピー・マッスル）のご愛顧に感謝します。​phpMusselは、​トロイの木馬型をはじめ、​
 各種ウィルス、​マルウェアがアップロードファイルからシステムに侵入しようとするのを検知するよう設計されたPHPスクリプトです。
 ClamAVやその他のシグネチャに基づきシステム内のどこに配置されても機能します。
                                     ~ ~ ~
 PHPMUSSEL著作権2013とGNU一般公衆ライセンスv2を超える権利について：​Caleb M (Maikuolan)著。
                                     ~ ~ ~
cli_ln3: |
  ＣＬＩモード（コマンドラインインターフェイス）でphpMusselを実行中です。ファイルまたはディレクトリ―をスキャンするには、
  「scan」とタイプし、​続けてファイル名またはディレクトリ名をタイプしてエンターを押して下さい。ＣＬＩモードコマンドのリストを得るには「c」
  とタイプしてエンターを押して下さい；終了には「q」とタイプしてエンターを押します。
cli_pe1: "正しいＰＥファイルではありません！"
cli_pe2: "ＰＥセクション："
cli_signature_placeholder: "シグネチャ名"
cli_working: "処理中"
corrupted: "破損ＰＥを検出しました"
data_not_available: "データは入手できません。"
denied: "アップロード拒否！"
denied_reason: "以下の理由でアップロードは拒否されました："
detected: "%sを検出しました"
detected_control_characters: "制御文字を検出しました"
encrypted_archive: "暗号化されたアーカイブ検出：暗号化されたアーカイブは許可されていません"
error_log_header: "次のエラーのいずれかが引き続き発生する場合、それらを報告する、またはサポートを求めるには、GitHubのphpMusselイシューズ・ページで新しいイシューを作成してください。​エラーとその他の関連情報を含めますください。​ありがとう。"
failed_to_access: "「%s」にアクセスできませんでした！"
field_date: "日時"
field_header_hash_reconstruction: "ハッシュ・シグネチャの再構築"
field_header_pe_reconstruction: "ＰＥセクション・シグネチャの再構築"
field_header_scan_results_why_flagged: "スキャン結果（なぜそれが識別されるのか）"
field_ip_address: "ＩＰアドレス"
file: "ファイル"
filesize_limit_exceeded: "容範囲外ファイルサイズです"
filetype_blacklisted: "ファイルタイプがブラックリスト記載です"
finished: "完了"
generated_by: "%sによって生成されました"
greylist_cleared: " グレーリストが解除されました。"
greylist_updated: " グレーリストがアップデートされました。"
honeypot_event: "ハニーポット・イベント。"
image: "画像"
instance_already_active: "インスタンスが既にアクティブです！​フックを再確認して下さい。"
invalid_data: "不正データ！"
invalid_file: "不正ファイル！"
invalid_url: "不正ＵＲＬ！"
macros_not_permitted: "マクロは許可されていません"
ok: "ＯＫです"
only_allow_images: "画像ファイルのみ許可されています"
quarantined_as: "「/vault/quarantine/%s.qfu」として検疫。"
recursive: "再帰定義呼び出しの繰り返し回数が上限を超えました"
required_variables_not_defined: "リクエストのあった変数は定義されていないため、​続行できません。"
scan_chameleon: "%s Chameleon（カメレオン）攻撃が検出されました"
scan_checking: "チェック中"
scan_command_injection: "コマンドインジェクション攻撃が検出されました"
scan_complete: "完了"
scan_extensions_missing: "失敗（要求のあった拡張子がありません）！"
scan_filename_manipulation_detected: "ファイルネイム不正操作が検出されました"
scan_missing_filename: "ファイル名が存在しません"
scan_no_problems_found: "問題は検出されませんでした。"
scan_reading: "読み込んでいます"
scan_signature_file_missing: "シグネチャ・ファイルがありません"
scan_tampering: "検出された潜在的に危険なファイル改ざん"
scan_unauthorised_upload: "不正ファイルアップロード改ざんが検出されました"
scan_unauthorised_upload_or_misconfig: "不正ファイルアップロード改ざんまたはミスコンフィギュレーションが検出されました！"
started: "開始しています"
too_many_files_in_archive: "アーカイブ内のファイルが多すぎます"
too_many_urls: "ＵＲＬが多すぎます"
upload_error_1: "指示された最大アップロードファイルサイズを超えています。"
upload_error_2: "フォームのファイルサイズ上限を超えています。"
upload_error_34: "アップロード失敗！​ホスト責任者に相談して下さい！"
upload_error_6: "アップロードディレクトリがありません！​ホスト責任者に相談して下さい！"
upload_error_7: "ディスクに書き込めません！​ホスト責任者に相談して下さい！"
upload_error_8: "不適切なＰＨＰ設定が検出されました！​ホスト責任者に相談して下さい！"
upload_limit_exceeded: "アップロードの制限を超えています。"
x_does_not_exist: "「%s」は存在しません"
cli_commands: |
 ..
 q
 - ＣＬＩ終了。
 - エイリアス：quit，exit。
 hash_file:[アルゴ] [ファイル名]
 - ファイルからハッシュ・シグネチャを作成。
 hash:[アルゴ] [文字列]
 - 文字列からハッシュ・シグネチャを作成。
 algo
 - サポートされているすべてのアルゴリズムを一覧表示します。
 hex_encode [文字列]
 - ２進法文字列を１６進法文字列に変換。
 - エイリアス：​x。
 hex_decode [文字列]
 - １６進法文字列を２進法文字列に変換。
 base64_encode [文字列]
 - ２進法文字列をＢＡＳＥ６４文字列に変換。
 - エイリアス：​b。
 base64_decode [文字列]
 - ＢＡＳＥ６４文字列を２進法文字列に変換。
 pe_meta [ファイル名]
 - ＰＥファイルからメタデータを抽出する。
 url_sig [文字列]
 - ＵＲＬスキャナ・シグネチャを生成する。
 scan [ファイル名]
 - ファイルまたはディレクトリをスキャン。
 - エイリアス：s。
 c
 - コマンドリストをプリント。
